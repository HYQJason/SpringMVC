<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">


    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <servlet>
        <servlet-name>dispatcher</servlet-name><!--servlet-name中如果没有指定init-param属性，那么系统自动寻找的spring配置文件为[servlet-name]-servlet.xml。-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup><!--启动顺序，让这个Servlet随Servletp容器一起启动。-->
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <!--Servlet拦截匹配规则可以自已定义，当映射为@RequestMapping("/user/add")时，为例,拦截哪种URL合适？-->
        <!--1、拦截*.do、*.htm， 例如：/user/add.do,这是最传统的方式，最简单也最实用。不会导致静态文件（jpg,js,css）被拦截。-->
        <!--2、拦截/，例如：/user/add,可以实现现在很流行的REST风格。很多互联网类型的应用很喜欢这种风格的URL。弊端：会导致静态文件（jpg,js,css）被拦截后不能正常显示。 -->
        <url-pattern>/</url-pattern><!--会拦截URL中带“/”的请求。-->
    </servlet-mapping>


  <!--  <welcome-file-list>&lt;!&ndash;指定欢迎页面&ndash;&gt;
        <welcome-file>login.html</welcome-file>
    </welcome-file-list>
    <error-page> &lt;!&ndash;当系统出现404错误，跳转到页面nopage.html&ndash;&gt;
        <error-code>404</error-code>
        <location>/nopage.html</location>
    </error-page>
    <error-page> &lt;!&ndash;当系统出现java.lang.NullPointerException，跳转到页面error.html&ndash;&gt;
        <exception-type>java.lang.NullPointerException</exception-type>
        <location>/error.html</location>
    </error-page>
    <session-config>&lt;!&ndash;会话超时配置，单位分钟&ndash;&gt;
        <session-timeout>360</session-timeout>
    </session-config>-->
</web-app>